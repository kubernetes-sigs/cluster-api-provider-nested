
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: nestedcontrolplanes.controlplane.cluster.x-k8s.io
spec:
  group: controlplane.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    - capn
    - capi
    kind: NestedControlPlane
    listKind: NestedControlPlaneList
    plural: nestedcontrolplanes
    shortNames:
    - ncp
    singular: nestedcontrolplane
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Name of the cluster
      jsonPath: .spec.clusterName
      name: ClusterName
      priority: 1
      type: string
    name: v1alpha3
    schema:
      openAPIV3Schema:
        description: NestedControlPlane is the Schema for the nestedcontrolplanes
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: NestedControlPlaneSpec defines the desired state of NestedControlPlane
            properties:
              clusterDomain:
                description: ClusterDomain allows you to specify the domain name of
                  the virtual cluster. e.g. a pod dns will be {some-pod}.{some-namespace}.svc.{ClusterDomain}
                type: string
              clusterName:
                description: ClusterName allows you to specify the name of the virtual
                  cluster, if you don't supply one then one will get generated for
                  you.
                type: string
              clusterNamespace:
                description: ClusterNamespace allows you to specify the namespace
                  where the control plane components are run, if you don't specify
                  one then the namespace will be in the format of {namespace}-{vcp.uid}.
                  This also makes up the prefixes used for all Namespaces in the cluster.
                  e.g. {namespace}-{vcp.uid}-{vc-namespace}
                type: string
              configRef:
                description: TemplateRef allows you to specify the bootstrap template
                  to create the virtual cluster.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              opaqueMetaPrefixes:
                description: OpaqueMetaPrefixes allows you to specify the key prefix
                  of labels or annotations that are not visible to Virtual Cluster
                  but are kept in super master. For example, the annotations added
                  by syncer controller.
                items:
                  type: string
                type: array
              pkiExpireDays:
                default: 365
                description: PKIExpireDays allows you to specify the period of time
                  the virtual cluster PKI, if not set the PKI will expire after 1
                  year.
                format: int64
                type: integer
              transparentMetaPrefixes:
                description: TransparentMetaPrefixes allows you to specify the key
                  prefix of labels or annotations that should be back populated to
                  Virtual Cluster. These meta data are generated by super master controllers,
                  which are needed by virtual cluster to interact with external systems.
                items:
                  type: string
                type: array
            type: object
          status:
            description: NestedControlPlaneStatus defines the observed state of NestedControlPlane
            properties:
              clusterNamespace:
                description: ClusterNamespace denotes the namespace where the control
                  plane components are deployed into.
                type: string
              conditions:
                $ref: '#/definitions/sigs.k8s.io~1cluster-api~1api~1v1alpha3~0Conditions'
                description: Conditions specifies the cpnditions for the managed control
                  plane
              ready:
                description: Ready denotes that the NestedControlPlane API Server
                  is ready to receive requests and that the VPC infra is ready.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
